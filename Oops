//L001
//Program1
class Person{
  String name;
  int age;
  long mn;
}

public class L001_1 {
    public static void game1(Person p1 , Person p2){
        Person temp = p1;
        p1 = p2;
        p2 = temp;
    }
    public static void game2(Person p1 , Person p2){
        String temp1 = p1.name;
        p1.name = p2.name;
        p2.name = temp1;
        
        int temp2 = p1.age;
        p1.age = p2.age;
        p2.age = temp2;
    }
    public static void game3(Person p1 , Person p2){
        String temp1 = p1.name;
        p1.name = p2.name;
        p2.name = temp1;
        p2 = new Person();  
        int temp2 = p1.age;
        p1.age = p2.age;
        p2.age = temp2;
    }
    public static void game4(Person p1 , Person p2){
        p1 = new Person();  
        p2 = new Person();  
        String temp1 = p1.name;
        p1.name = p2.name;
        p2.name = temp1;
        int temp2 = p1.age;
        p1.age = p2.age;
        p2.age = temp2;
    }
    public static void main(String[] args) {
        Person p1 = new Person();
        p1.name = "ajay";
        p1.age = 22;
        p1.mn = 9328339287L; 
        Person p2 = new Person();
        p2.name = "aman";
        p2.age = 25;
        p2.mn = 9344533557L;
        System.out.println(p1.name +" " + p1.age+" "+p1.mn);
        System.out.println(p2.name +" " + p2.age+" "+p2.mn);
        game3(p1 , p2);
        System.out.println(p1.name +" " + p1.age+" "+p1.mn);
        System.out.println(p2.name +" " + p2.age+" "+p2.mn);
    } 
}

//program2

class Person{
    String name;
    int age;
    public void formFill(String n , int a){
      System.out.println("My name is: "+ n);
      System.out.println("My age is: "+ a);

    }
    public void greet(){
        System.out.println("Hi....greet1");
    }
    public void greet(String n){
        System.out.println("Hi....greet2");
    }
    public void greet(int a){
        System.out.println("Hi....greet3");
    }
    public void greet(int a,int b){
        System.out.println("Hi....greet4");
    }
    public void walk(){
        System.out.println("I am walking....");
    }
}

public class L001_2 {
    public static void main(String[] args) {
        Person p1 = new Person();
        // p1.greet();
        p1.greet(25);
        p1.walk();
        p1.formFill("aman", 25);
    }
}

//************************************8

//L002

//program1
class Rectangle{
    int length;
    int width;
    Rectangle(){ //non parametrized constructor
      System.out.println("I am a non parametrized constructor ");
      length = 10;
      width = 20;
    }
    Rectangle(int l , int w){ // parametrized constructor
      System.out.println("I am a parametrized constructor ");
      length = l;
      width = w;
    }

    public int area(){
        return length*width;
    }
    public int perimeter(){
        return 2*(length+width);
    }
}
public class L002_1 {
    public static void main(String[] args) {
        
        // Rectangle obj1 = new Rectangle();
        // obj1.length = 10;
        // obj1.width = 20;
        // int val = obj1.area();
        // System.out.println(val);
        // int val2 = obj1.perimeter();
        // System.out.println(val2);
        Rectangle a1 = new Rectangle();
        System.out.println(a1.area());
        Rectangle a2 = new Rectangle(20,30);
        System.out.println(a2.area());
    }
}

//program2
class Student{
 String name;
 int rollNumber;
 int marks;

    Student(String name , int rollNumber , int marks){
        System.out.println("Constructor top string ,roll , mark");
        this.name = name;
        this.rollNumber = rollNumber;
        this.marks = marks;
    }
    Student(String name ){
        this("abc" , 23,78);
        System.out.println("Constructor 1 string");
        this.name = name;
        
    }
    Student(int marks){
        System.out.println("Constructor 2 marks");
        this.marks = marks;
    }

    public void display(){
        System.out.println(name);

        if(marks<0 || marks > 100) {
            System.out.println("Invalid marks");
        } else if(marks >= 90){
            System.out.println("Grade A");
        } else if(marks >= 80){
            System.out.println("Grade B");
        } else if(marks >= 70){
            System.out.println("Grade C");
        } else if(marks >= 60){
            System.out.println("Grade D");
        } else {
            System.out.println("Grade E");
        }
    }
}
public class L002_2 {
    public static void main(String[] args) {
        Student s1 = new Student("pratham");
        // s1.display();
    }
}

//program3

class A{
 private int x;
 private int y;

 public void setX(int a){
    x = a;
 }
 public void setY(int a){
    y = a;
 }
 public int getX(){
    return x;
 }
 public int getY(){
    return y;
 }

}

public class L002_3 {
    public static void main(String[] args) {
        A obj1 = new A();
        obj1.setX(100);
        System.out.println(obj1.getX());
    }
}

//L003
//program1
class BankAccount{
  long accountNumber;
  private int balance;
  private int password;

   BankAccount(long ac ,int bal,int pass){
    accountNumber = ac;
    balance = bal;
    password = pass;
   }

  public void deposit(int depBal){
    balance = balance + depBal;
  }

  public void withDraw(int witBal,int pin){
    if(password != pin){
        System.out.println("Invalid Password");
        return;       
    }
    
    if(witBal > balance){
        System.out.println("Insufficent amount");
    } else {
        balance = balance - witBal;
    }
}
public void getBalance(int pin){
    if(password == pin){
          System.out.println("Available balance is: "+balance);   
      } else {
          System.out.println("Invalid Password");
      }     
  }

}

public class L003_1 {
    public static void main(String[] args) {
        BankAccount b1 = new BankAccount(124839874,10000, 1234);
        // b1.getBalance(1234);
        b1.withDraw(8000, 1234);
        // b1.getBalance(1234);
        b1.deposit(5000);
        b1.withDraw(8000, 1234);
        b1.getBalance(1234);
    }
}

//program2

class Parent{
    private int x;
    private int y;
    Parent(){
        System.out.println("I am parent const 1");
    }
    Parent(int v1){
        System.out.println("I am parent const 2");
        x = v1;
    }
    Parent(int v1, int v2){
        System.out.println("I am parent const 3");
        x = v1;
        y = v2;
    }

    public int getX(){
      return x;
    }
    public int getY(){
      return y;
    }
    public void setX(int val){
      x = val;
    }
    public void setY(int val){
     y = val;
    }
}
class Child extends Parent{
  int z;
  Child(){
        System.out.println("I am child const 1");
    }
  Child(int v1){
        System.out.println("I am child const 2");
    }
  Child(int v1 , int v2){
       super(v1,v2); 
        System.out.println("I am child const 3");
    }
  public int getZ(){
      return z;
    }
    public void setZ(int val){
      z = val;
    }

}

public class L003_2 {
    public static void main(String[] args) {
        //  Parent p1 = new Parent();
         Child c1 = new Child(10,20);
       

    }
}

//**********************************
//L004
//program1

class Animal{
public void talk(){
     System.out.println("Animal talk");
  }
  public void sound(){
    System.out.println("Animal talk");
  }

}
class Dog extends Animal{
    @Override
  public void sound(){
      System.out.println(" Dog bark");
    }
  public void walk(){
    System.out.println("Dog is walking");
  }

}

public class L004_1 {
    public static void main(String[] args){
         // Dog d1 = new Dog();
        // Animal a1 = new Animal();
        // Dog d2 = new Animal();//false
        
        Animal a2 = new Dog();
        a2.talk();
        a2.sound();
        // a2.walk();
    }
}

//program 2
abstract class Animal1{ 
    public void talk(){
        System.out.println("I am talkig");
    }
   abstract public void sound();
   abstract public void walk();

}
class Dog1 extends Animal1{
   public void sound(){
    System.out.println("Dog bark");
   }
   public void walk(){
    System.out.println("Dog walk");
   }
}

public class L004_2 {
    public static void main(String[] args) {
      Dog1 d1 = new Dog1();
      d1.walk();    
      d1.sound(); 
      d1.talk();        
    }
}

//program 3

class Animal1{
    public void meth1(){
        System.out.println("I am meth1");
    }
}

interface Animal2{
    public void walk1();
    public void talk1();
}
interface Animal3{
    public void walk2();
    public void talk2();
}
class Doggy extends Animal1 implements Animal2,Animal3{
   public void walk1(){
    System.out.println("doggy walking");
   }
   public void talk1(){
    System.out.println("doggy talking");
   }
   public void walk2(){
    System.out.println("doggy walking");
   }
   public void talk2(){
    System.out.println("doggy talking");
   }
}

public class L004_3 {
    public static void main(String[] args) {
        
    }
}

//*****************************************8
//L005
//p1

interface Playable{
    void play();
}

class Guitar implements Playable{  
   public void play(){
        System.out.println("play Guitar....");
    }
}
class Piano implements Playable{
   @Override
   public void play(){
        System.out.println("play Piano....");
    }
}
public class L005_1 {
    public static void main(String[] args) {
        Guitar g = new Guitar();
        g.play();
        Piano p = new Piano();
        p.play();
        Playable p1 = new Guitar();
        p1.play();
        Playable p2 = new Piano();
        p2.play();
    }
}

//p2

interface Animal4{
    void eat();
    void sleep();
}
interface WildAnimal extends Animal4{
   public void roamInJungle();
}
class Lion implements WildAnimal{
    public void eat(){
        System.out.println("Lion eat..");
    }
    public void sleep(){
        System.out.println("Lion sleep..");
    }
    public void roamInJungle(){
      System.out.println("jungle me ghumna...");
   }
}
class Elephant implements Animal4{
    @Override
    public void eat(){
        System.out.println("Elephant eat..");
    }
    @Override
    public void sleep(){
        System.out.println("Elephant sleep..");
    }
}

public class L005_2 {
    public static void main(String[] args) {
        Animal4 a1 = new Elephant();
        a1.eat();
        WildAnimal a2 = new Lion();
        a2.eat();
        a2.sleep();
        a2.roamInJungle();
    }
}

//p3

interface Person3{
   public void introduce();

   default void defaultMethod(){
     System.out.println("This is Default Method");
   }
}
class Student3 implements Person3{
    @Override
  public void introduce(){
    System.out.println("I am student");
  }
   @Override
   public void defaultMethod(){
     System.out.println("This is Default Method of student");
   }
   public void meth3(){
    System.out.println("This is meth2");
   }
}

public class L005_3 {
    public static void main(String[] args) {
        Person3 p1 = new Student3();
        p1.defaultMethod();
        p1.introduce();
        
    }
}

//p4

interface Shape{
    double PI = 3.141825;
    public double area(double r);
}
class Circle implements Shape{
    public double area(double rad){
        return PI * rad * rad;
    }
}

public class L005_4 {
    public static void main(String[] args) {
        Shape c1 = new Circle();
        double ans = c1.area(5.3);
        System.out.println(ans);     
    }
}

//p5
class Outer{
      public void display(){
            System.out.println("I am Outer class");
      }
     class Inner{
         public void display(){
            System.out.println("I am Inner class");
         }
     }
}

public class L005_5 {
    public static void main(String[] args) {
        Outer c1 = new Outer();
        c1.display();
       Outer.Inner c2 = c1.new Inner();
       c2.display();

    }
}


